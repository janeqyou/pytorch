# switch between user names 
# switch to my personal account 
git config --global user.name "Qian You"
git config --global user.email "bloodysnow1043@gmail.com"
git config --global credential.username "janeqyou"
git config --global credential.user.email "bloodysnow1043@gmail.com"

# this will write those information to all .git/config files 
# if using --local only the current git repositories will be changed 

# simple ec2 instance set up 
# need to request vCPU limit increase
# case 6831276141: “I'm happy to inform you that our EC2 engineers reviewed 
# your case and they have approved a limit increase request for 4 All P instances 
# in the US West (Oregon) region”

# Deep Learning AMI (Ubuntu 16.04) Version 27.0 (ami-0987fcabe779f2491)
# p2.xlarge, vCPU=4, GPU=1, RAM=61GB


# log into ec2
# making sure you have the keypair
# 34-221-78-49 is the public IPv4
chmod 440 ~/Downloads/janeyou-test.pem 
ssh -i ~/Downloads/janeyou-test.pem ubuntu@ec2-54-185-79-179.us-west-2.compute.amazonaws.com


# portforwarding running the python notebook in the following folders 
# 172-31-8-199 is the private
ubuntu@ip-172-31-8-199:/home/ubuntu/tutorials/pytorch

## copy latest Anaconda bash script to this ec2
## scp -i ~/Downloads/janeyou-test.pem ~/Downloads/Anaconda3-2020.02-MacOSX-x86_64.sh ubuntu@ec2-34-221-78-49.us-west-2.compute.amazonaws.com:/home/ubuntu/misc

## but actually anaconda, notebook jupyter, python 3 has pre installed
## even pyspark 
/home/ubuntu/anaconda3/bin//jupyter
/home/ubuntu/anaconda3/bin//python
/home/ubuntu/anaconda3/bin//pyspark

# Option 1. start jupyter notebook on ec2 instance and access from local machine using 
# port forwarding 
jupyter notebook --no-browser --port=8888 &
# keep track of lines such as "http://localhost:8888/?token=e50919c93cb94e50c20900c77c599402f11fab53e50043bf"
# verify jupyter is running on port 8888
>> lsof -i TCP:8888 | grep LISTEN
jupyter-n 20312 ubuntu    9u  IPv4  43627      0t0  TCP localhost:8888 (LISTEN)
ssh -i ~/Downloads/janeyou-test.pem -L 8000:localhost:8888 ubuntu@ec2-54-185-79-179.us-west-2.compute.amazonaws.com
# Go to your local host and open localhost:8000
# if password or token is asked, input the portion after "token="

# Option 2. start up a Gitlab
# GPU instance: ec2-34-222-170-245.us-west-2.compute.amazonaws.com

# trying to enable GPU on CloudWatch 
# add an IAM user 
```
User name: janeyoufirst
Console sign-in link: https://871634759897.signin.aws.amazon.com/console
account id: 871634759897

#AWS access type
#Programmatic access and AWS Management Console access
#Console password type
#Autogenerated
#Require password reset
#Yes
#Permissions boundary
#Permissions boundary is not set

# log back in root user console
# create a security group almost-admin
# grant the policy - AdministratorAccess
# add janeyoufirst to this group 

## log back in and launch a GPU instance 
## GPU 
ssh -i ~/Downloads/janeyou-test.pem ubuntu@ec2-54-214-146-35.us-west-2.compute.amazonaws.com

this session: 9495229727798df29263f2f8c708ea91857558070151a8af
ssh -i ~/Downloads/janeyou-test.pem -L 8000:localhost:8888 ubuntu@ec2-54-214-146-35.us-west-2.compute.amazonaws.com
## install cloudwatch agent on a ec2 instance 
## install python 
## install awscli
https://docs.aws.amazon.com/cli/latest/userguide/install-macos.html#install-macosos-bundled

## check the architecture and platform of your ec2 instance 
## go to instance descriptions to find out
Canonical, Ubuntu, 16.04 LTS, amd64 xenial image build on 2020-04-07

## if copying and pasting in bash gives extra character 
## use reset 

## list all driver's here s3.amazonaws.com/amazoncloudwatch-agent/
## you may already have cloudwatch agent 
## cloudwatch link: 
aws cloudwatch list-metrics --namespace AWS/EC2


## Running a infinite loop of GPU code ; Test the CloudWatch
## follow this link to configure cloud watch 
## https://aws.amazon.com/blogs/machine-learning/monitoring-gpu-utilization-with-amazon-cloudwatch/
nvidia-smi
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 440.33.01    Driver Version: 440.33.01    CUDA Version: 10.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla K80           On   | 00000000:00:1E.0 Off |                    0 |
| N/A   40C    P8    30W / 149W |      0MiB / 11441MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

## pump metrics 
## for janeyoufirst to pump metrics ; it needs to have the following policy json
#### {  
##    "Version": "2012-10-17",   
##    "Statement": [     
##         {       
##             "Action": [         
##                 "cloudwatch:PutMetricData",         
##              ],       
##              "Effect": "Allow",       
##              "Resource": "*"     
##         }   
##    ] 
####
## it is up to the root user to grant this role. However janeyoufirst was already
## assigned administrator role so it was allowed for all actions on all resources
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "*",
            "Resource": "*"
        }
    ]
}

## Setup SageMaker GroundTruth Labeling job on a freetire machine 
sudo pip2.7 install nvidia-ml-py boto3
## download 
wget ""
## change REGION and NameSpace to <your-metrics-name>
python2.7 gpumon.py & 

## start a GPU process and 
## Go to cloud watch link to create a dashboard


### ****** Set up SageMaker GroundTruth Labeling ******
### use a free tier instance is enough ### 













